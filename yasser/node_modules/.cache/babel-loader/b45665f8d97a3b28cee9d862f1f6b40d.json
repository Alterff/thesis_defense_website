{"ast":null,"code":"import { useState, useEffect, useCallback } from \"react\";\nvar IS_BROWSER = typeof window !== \"undefined\" && typeof navigator !== \"undefined\" && typeof document !== \"undefined\";\nvar evtTarget;\n\ntry {\n  evtTarget = new EventTarget();\n} catch (_unused) {\n  var _ref, _ref$createElement;\n\n  evtTarget = (_ref = IS_BROWSER ? document : {}) === null || _ref === void 0 ? void 0 : (_ref$createElement = _ref.createElement) === null || _ref$createElement === void 0 ? void 0 : _ref$createElement.call(_ref, \"phony\");\n}\n\nvar useSSRStorage = () => (_, defaultValue) => [defaultValue];\n\nvar useStorage = storage => (key, defaultValue) => {\n  var raw = storage.getItem(key);\n  var [value, setValue] = useState(raw ? JSON.parse(raw) : defaultValue);\n  var updater = useCallback(function (updatedValue) {\n    var remove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    setValue(updatedValue);\n    storage[remove ? \"removeItem\" : \"setItem\"](key, JSON.stringify(updatedValue));\n    evtTarget.dispatchEvent(new CustomEvent(\"storage_change\", {\n      detail: {\n        key\n      }\n    }));\n  }, [key]);\n  defaultValue != null && !raw && updater(defaultValue);\n  useEffect(() => {\n    var listener = _ref2 => {\n      var {\n        detail\n      } = _ref2;\n\n      if (detail.key === key) {\n        var lraw = storage.getItem(key);\n        lraw !== raw && setValue(JSON.parse(lraw));\n      }\n    };\n\n    evtTarget.addEventListener(\"storage_change\", listener);\n    return () => evtTarget.removeEventListener(\"storage_change\", listener);\n  });\n  return [value, updater, () => updater(null, true)];\n};\n\nexport var useLocalStorage = IS_BROWSER ? useStorage(localStorage) : useSSRStorage();\nexport var useSessionStorage = IS_BROWSER ? useStorage(sessionStorage) : useSSRStorage();","map":{"version":3,"names":["useState","useEffect","useCallback","IS_BROWSER","window","navigator","document","evtTarget","EventTarget","_unused","_ref","_ref$createElement","createElement","call","useSSRStorage","_","defaultValue","useStorage","storage","key","raw","getItem","value","setValue","JSON","parse","updater","updatedValue","remove","arguments","length","undefined","stringify","dispatchEvent","CustomEvent","detail","listener","_ref2","lraw","addEventListener","removeEventListener","useLocalStorage","localStorage","useSessionStorage","sessionStorage"],"sources":["C:/Users/yasse/OneDrive/Bureau/react/pp/yasser/node_modules/react-use-storage/lib/esm/index.js"],"sourcesContent":["import{useState,useEffect,useCallback}from\"react\";var IS_BROWSER=typeof window!==\"undefined\"&&typeof navigator!==\"undefined\"&&typeof document!==\"undefined\";var evtTarget;try{evtTarget=new EventTarget();}catch(_unused){var _ref,_ref$createElement;evtTarget=(_ref=IS_BROWSER?document:{})===null||_ref===void 0?void 0:(_ref$createElement=_ref.createElement)===null||_ref$createElement===void 0?void 0:_ref$createElement.call(_ref,\"phony\");}var useSSRStorage=()=>(_,defaultValue)=>[defaultValue];var useStorage=storage=>(key,defaultValue)=>{var raw=storage.getItem(key);var[value,setValue]=useState(raw?JSON.parse(raw):defaultValue);var updater=useCallback(function(updatedValue){var remove=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;setValue(updatedValue);storage[remove?\"removeItem\":\"setItem\"](key,JSON.stringify(updatedValue));evtTarget.dispatchEvent(new CustomEvent(\"storage_change\",{detail:{key}}));},[key]);defaultValue!=null&&!raw&&updater(defaultValue);useEffect(()=>{var listener=_ref2=>{var{detail}=_ref2;if(detail.key===key){var lraw=storage.getItem(key);lraw!==raw&&setValue(JSON.parse(lraw));}};evtTarget.addEventListener(\"storage_change\",listener);return()=>evtTarget.removeEventListener(\"storage_change\",listener);});return[value,updater,()=>updater(null,true)];};export var useLocalStorage=IS_BROWSER?useStorage(localStorage):useSSRStorage();export var useSessionStorage=IS_BROWSER?useStorage(sessionStorage):useSSRStorage();"],"mappings":"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"},"metadata":{},"sourceType":"module"}